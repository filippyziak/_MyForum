@{
    ViewData["Title"] = Model.Title;
}

@model PostCardViewModel
<div class="container">
    <div class="row mt-3">
        <div class="col">
            <div class="card">
                <div class="card-body">
                    <h3 class="card-title">@Model.PostTitle</h3>
                    <p class="text-monospace h5 d-flex justify-content-between px-2">
                        <a class="text-muted">Author: @Model.Username</a>
                        <a class="text-muted">Updated: @Model.DateUpdated.ToRelativeDate()</a>
                    </p>
                    <p class="card-text px-3 py-1">@Model.Content</p>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container text-center">
    @foreach (var answer in @Model.Answers)
    {
        <div class="row border rounded p-3 my-1 text-break">
            <div class="col">
                @answer.Author
            </div>
            <div class="col text-break">
                @answer.Content
            </div>
            <div class="col">
                @answer.Created.ToRelativeDate()
            </div>
        </div>
    }
</div>

<div class="row mt-2">
    <div class="col-md-8 offset-md-2">
        @await Component.InvokeAsync("CreateAnswer", new { viewModel = new CreateAnswerViewModel { PostId = Model.PostId
                }})
    </div>
</div>

<partial name="_AlertPartial" model="@Model.Alert" />